<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Max number of bitflips allowed (-1 is no max NYI)

import "@LIBPATH@" {
    void new_trace ();
    void save_trace ();
    void log_flip (int32_t loc,int32_t reg);
}; 

const int MAX_FLIPS = @MAX_FLIPS@;


// int to control if we use the new version (1) or the old version (0) of sudo_passwd_verify
int new_ver = @VERSION@; // old version = 0, new_version = 1

// Length of passwords
const int size = @SIZE@;


const int I1 = 1;
const int I2 = 2;
const int I3 = 3;
const int I4 = 4;
const int I5 = 5;
const int I6 = 6;
const int I7 = 7;
const int I8 = 8;
const int I9 = 9;

const int L2 = 10;
const int L3 = 11;
const int L4 = 12; 
const int L5 = 13; 
const int L6 = 14; 
const int L7 = 15;

int Location = 1;

// Types
typedef int[0, 256] byte_t;
typedef int[0, 8] bit_t;

const byte_t nullChar = @NULL@;
const int AUTH_SUCCESS = 12300;
const int AUTH_FAILURE = 10011;

// Currently selected value to flip
bit_t currBit;


// Arguments

byte_t user_pass[size] = {@USER_PASS@, nullChar};
byte_t stored_pass[size] = {@STORED_PASS@, nullChar};


// Memory
typedef struct{
    int returnAddr; // 44(sp)
    int framePtr; // 40(sp)
    int arrIndex1; // -36(s0)
    int sudoAuth; // -40(s0)
    int arrIndex2; // -20(s0)
    int strCmpRes; // -28(s0)
    int ret; // -24(s0)
} memory_t;

// Registers

int sp;
int ra;
int s0;
int a0;
int a1;
int a2;
int a3;
int a4;
int a5;



const int zero = 0;

int pwr(int num, int pwr){
    int res = 1;
    if(pwr == 0)
        return res;
    while(pwr &gt; 0){
        res = res * num;
        pwr--;
    }
    return res;
}





    
</declaration>
	<template>
		<name x="5" y="5">SUDO</name>
		<declaration>// new sudo_passwd_verify
clock x;
memory_t memory = {0, 0, 0, 0, 0, 0, 0};

// ID for accessing registers
const int id = 0; 


void initRegs(){
    sp = 0;
    ra = 0;
    s0 = 0;
    a0 = 0;
    a1 = 0;
    a2 = size;
}

void block0(){
    sp =  sp - 48;
    memory.returnAddr = ra;
    memory.framePtr = s0;
    s0 = sp + 48;
    memory.arrIndex1 = a0;
    memory.sudoAuth = a1;
    a5 = memory.sudoAuth; // abstraction of line 8-9
    memory.arrIndex2 = a5;
    a5 = 4096;
    a5 = a5 - 1;
    memory.strCmpRes = a5;

    // Jump to L2
}


// L4
void block1(){
    a5 = memory.arrIndex1;
    a4 = a5 + 1;
    memory.arrIndex1 = a4;
    a5 = user_pass[a5];
    
    // a5 != escapeChar --&gt; L2    
}

void block2(){
    memory.strCmpRes = zero;

    // Jump to L3
}

// L2

void block3_a(){
    a5 = memory.arrIndex1;
}
void block3_b(){
    a4 = user_pass[a5];
    a5 = memory.arrIndex2;
    a3 = a5 + 1;
    memory.arrIndex2 = a3;
    a5 = stored_pass[a5];

    // a4 == a5 --&gt; L4    
}

// L3
void block4(){
    a5 = memory.strCmpRes;
    
    // a5 == zero --&gt; L5
}

void block5(){
    a5 = memory.arrIndex1;
    a5 = user_pass[a5];
    a4 = a5;
    a5 = memory.arrIndex2;
    a5 = a5 - 1;
    a5 = stored_pass[a5];
    a5 = a4 - a5;
    memory.strCmpRes = a5;
}

// L5
void block6(){
    a5 = memory.strCmpRes;
    
    // a5 != zero --&gt; L6
}

// -28(s0) and -24(s0) swapped. -28(s0) = matched, -24(s0) = strCmpRes
// ret == matched for the purpose of this piece of code
void block6_o(){
    a5 = memory.strCmpRes;
    memory.ret = a5;
    a5 = memory.ret;
    if (a5 != 0)
        a5 = 0;
    else
        a5 = 1;
    a5 = a5 &amp; 255;
    a0 = a5;
    ra = memory.returnAddr;
    s0 = memory.framePtr;
    sp = sp + 48;

    // Jump to return address
}

void block7(){
    a5 = AUTH_SUCCESS;
    a5 = a5 - 1755;
    memory.ret = a5;

    // jump to L7    
}

// L6
void block8(){
    a5 = AUTH_FAILURE;
    a5 = a5 + 1754;
    memory.ret = a5;
}

// L7
void block9(){
    a5 = memory.ret;
    a0 = a5;
    ra = memory.returnAddr;
    s0 = memory.framePtr;
    sp = sp + 48;
    
    // Jump to return address
}</declaration>
		<location id="id0" x="-884" y="-68" color="#ffa500">
			<name x="-969" y="-93">Undefined</name>
		</location>
		<location id="id1" x="-1759" y="-331" color="#ffa500">
			<name x="-1869" y="-339">MemSegFault</name>
		</location>
		<location id="id2" x="-280" y="-408">
			<name x="-290" y="-442">L6_l</name>
			<label kind="invariant" x="-272" y="-399">x &lt;= 1</label>
		</location>
		<location id="id3" x="-280" y="-501">
			<name x="-290" y="-535">I8_l</name>
			<label kind="invariant" x="-297" y="-493">x &lt;= 1</label>
		</location>
		<location id="id4" x="-620" y="-195" color="#ff0000">
			<name x="-629" y="-229">Auth_Fail</name>
		</location>
		<location id="id5" x="-1071" y="-67" color="#00ff00">
			<name x="-1156" y="-93">Auth_Succ</name>
		</location>
		<location id="id6" x="-969" y="-195">
			<name x="-994" y="-221">I9_l</name>
			<urgent/>
		</location>
		<location id="id7" x="-969" y="-331">
			<name x="-995" y="-356">L7_7</name>
			<label kind="invariant" x="-960" y="-323">x &lt;= 1</label>
		</location>
		<location id="id8" x="-654" y="-552">
			<name x="-664" y="-586">I6_l</name>
			<label kind="invariant" x="-680" y="-535">x &lt;= 1</label>
		</location>
		<location id="id9" x="-603" y="-459">
			<name x="-629" y="-484">L5_l</name>
			<label kind="invariant" x="-586" y="-484">x &lt;= 1</label>
		</location>
		<location id="id10" x="-1156" y="-612">
			<name x="-1166" y="-646">I3_l</name>
			<urgent/>
		</location>
		<location id="id11" x="-790" y="-459">
			<name x="-816" y="-484">I5_l</name>
			<urgent/>
		</location>
		<location id="id12" x="-1156" y="-518">
			<name x="-1181" y="-544">L4_t</name>
			<label kind="invariant" x="-1156" y="-510">x &lt;= 1</label>
		</location>
		<location id="id13" x="-1011" y="-459">
			<name x="-1062" y="-493">L3_l</name>
			<label kind="invariant" x="-1037" y="-450">x &lt;= 1</label>
		</location>
		<location id="id14" x="-1309" y="-459">
			<name x="-1334" y="-484">I2_l</name>
			<urgent/>
		</location>
		<location id="id15" x="-1547" y="-459">
			<name x="-1572" y="-484">L2_l</name>
			<label kind="invariant" x="-1606" y="-450">x &lt;= 1</label>
		</location>
		<location id="id16" x="-1785" y="-459">
			<name x="-1810" y="-484">I1_l</name>
			<label kind="invariant" x="-1810" y="-442">x &lt;= 1</label>
		</location>
		<location id="id17" x="-1785" y="-603" color="#00ffff">
			<committed/>
		</location>
		<location id="id18" x="-1011" y="-569">
			<name x="-1021" y="-603">I4_l</name>
			<label kind="invariant" x="-994" y="-578">x &lt;= 1</label>
		</location>
		<location id="id19" x="-323" y="-459">
			<name x="-333" y="-493">I7_t</name>
			<urgent/>
		</location>
		<location id="id20" x="-1615" y="-603" color="#00ffff">
			<committed/>
		</location>
		<location id="id21" x="-1547" y="-331">
			<committed/>
		</location>
		<init ref="id17"/>
		<transition id="id22">
			<source ref="id6"/>
			<target ref="id0"/>
			<label kind="guard" x="-884" y="-144">!(a0 == 1 || a0 == 10545 || a0 == 0 || a0 == 11765)</label>
			<label kind="assignment" x="-977" y="-161">new_trace()</label>
			<nail x="-952" y="-178"/>
			<nail x="-884" y="-178"/>
		</transition>
		<transition id="id23">
			<source ref="id21"/>
			<target ref="id14"/>
			<label kind="guard" x="-1504" y="-331">!(a5 &gt;= size)</label>
			<label kind="assignment" x="-1504" y="-314">block3_b(),
Location = I2</label>
			<nail x="-1309" y="-331"/>
		</transition>
		<transition id="id24">
			<source ref="id21"/>
			<target ref="id1"/>
			<label kind="guard" x="-1717" y="-357">a5 &gt;= size</label>
			<label kind="assignment" x="-1741" y="-331">new_trace()</label>
		</transition>
		<transition id="id25">
			<source ref="id20"/>
			<target ref="id17"/>
			<label kind="select" x="-1742" y="-637">i : int[0,1]</label>
			<label kind="assignment" x="-1742" y="-620">new_ver = i</label>
		</transition>
		<transition id="id26">
			<source ref="id9"/>
			<target ref="id6"/>
			<label kind="guard" x="-1190" y="-382">x &gt;= 1 &amp;&amp; new_ver == 0</label>
			<label kind="assignment" x="-1266" y="-365">block6_o(), x = 0, Location = I9</label>
			<nail x="-603" y="-408"/>
			<nail x="-1011" y="-408"/>
			<nail x="-1011" y="-238"/>
			<nail x="-969" y="-238"/>
		</transition>
		<transition id="id27">
			<source ref="id3"/>
			<target ref="id7"/>
			<label kind="guard" x="-255" y="-518">x &gt;= 1</label>
			<label kind="assignment" x="-323" y="-569">block7(), x = 0, Location =L7</label>
			<nail x="-187" y="-501"/>
			<nail x="-187" y="-331"/>
		</transition>
		<transition id="id28">
			<source ref="id2"/>
			<target ref="id7"/>
			<label kind="guard" x="-731" y="-382">x &gt;= 1</label>
			<label kind="assignment" x="-773" y="-399">block8(), x = 0, Location = L7</label>
			<nail x="-280" y="-365"/>
			<nail x="-969" y="-365"/>
		</transition>
		<transition id="id29">
			<source ref="id19"/>
			<target ref="id2"/>
			<label kind="guard" x="-442" y="-408">a5 != zero</label>
			<label kind="assignment" x="-356" y="-408">Location = L6</label>
			<nail x="-374" y="-408"/>
		</transition>
		<transition id="id30">
			<source ref="id19"/>
			<target ref="id3"/>
			<label kind="guard" x="-442" y="-527">a5 == zero</label>
			<label kind="assignment" x="-356" y="-501">Location = I8</label>
			<nail x="-374" y="-501"/>
		</transition>
		<transition id="id31">
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="guard" x="-603" y="-544">x &gt;= 1</label>
			<label kind="assignment" x="-603" y="-561">block5(), x = 0, Location = L5</label>
			<nail x="-603" y="-552"/>
		</transition>
		<transition id="id32">
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="guard" x="-943" y="-221">a0 == 0 || a0 == 11765</label>
			<label kind="assignment" x="-850" y="-195">new_trace()</label>
			<nail x="-859" y="-195"/>
		</transition>
		<transition id="id33">
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-1190" y="-221">a0 == 1 || a0 == 10545</label>
			<label kind="assignment" x="-1181" y="-178">save_trace ()</label>
			<nail x="-1071" y="-195"/>
		</transition>
		<transition id="id34">
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="guard" x="-961" y="-280">x &gt;= 1</label>
			<label kind="assignment" x="-961" y="-263">block9(), x = 0, Location = I9</label>
		</transition>
		<transition id="id35">
			<source ref="id9"/>
			<target ref="id19"/>
			<label kind="guard" x="-586" y="-459">x &gt;= 1 &amp;&amp; new_ver == 1</label>
			<label kind="assignment" x="-578" y="-442">block6(), x = 0, Location = I7</label>
		</transition>
		<transition id="id36">
			<source ref="id11"/>
			<target ref="id8"/>
			<label kind="guard" x="-773" y="-578">a5 != zero</label>
			<label kind="assignment" x="-772" y="-552">Location = I6</label>
			<nail x="-790" y="-552"/>
		</transition>
		<transition id="id37">
			<source ref="id11"/>
			<target ref="id9"/>
			<label kind="guard" x="-739" y="-459">a5 == zero</label>
		</transition>
		<transition id="id38">
			<source ref="id18"/>
			<target ref="id13"/>
			<label kind="guard" x="-1003" y="-544">x &gt;= 1</label>
			<label kind="assignment" x="-1003" y="-527">block2(), 
x = 0,
Location = L3</label>
		</transition>
		<transition id="id39">
			<source ref="id10"/>
			<target ref="id18"/>
			<label kind="guard" x="-1139" y="-637">a5 == nullChar</label>
			<label kind="assignment" x="-1122" y="-663">Location = I4</label>
			<nail x="-1011" y="-612"/>
		</transition>
		<transition id="id40">
			<source ref="id10"/>
			<target ref="id15"/>
			<label kind="guard" x="-1487" y="-612">a5 != nullChar</label>
			<label kind="assignment" x="-1487" y="-595">Location = I3</label>
			<nail x="-1513" y="-612"/>
			<nail x="-1513" y="-476"/>
		</transition>
		<transition id="id41">
			<source ref="id12"/>
			<target ref="id10"/>
			<label kind="guard" x="-1147" y="-586">x &gt;= 1</label>
			<label kind="assignment" x="-1147" y="-569">block1(), x = 0,
Location = I3</label>
		</transition>
		<transition id="id42">
			<source ref="id13"/>
			<target ref="id11"/>
			<label kind="guard" x="-935" y="-459">x &gt;= 1</label>
			<label kind="assignment" x="-969" y="-442">block4(), x = 0, Location = I5</label>
		</transition>
		<transition id="id43">
			<source ref="id14"/>
			<target ref="id12"/>
			<label kind="guard" x="-1368" y="-544">a4 == a5</label>
			<label kind="assignment" x="-1291" y="-518">Location = L4</label>
			<nail x="-1309" y="-518"/>
		</transition>
		<transition id="id44">
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="guard" x="-1249" y="-459">a4 != a5</label>
			<label kind="assignment" x="-1249" y="-442">Location = L3</label>
		</transition>
		<transition id="id45">
			<source ref="id15"/>
			<target ref="id21"/>
			<label kind="guard" x="-1538" y="-425">x &gt;= 1</label>
			<label kind="assignment" x="-1538" y="-408">block3_a(), x = 0</label>
		</transition>
		<transition id="id46">
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="guard" x="-1708" y="-459">x &gt;= 1</label>
			<label kind="assignment" x="-1742" y="-442">block0(), x = 0,
Location = L2</label>
		</transition>
		<transition id="id47">
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="assignment" x="-1776" y="-578">initRegs(),
Location = I1,
new_trace()</label>
		</transition>
	</template>
	<template>
		<name>Attacker</name>
		<declaration>clock x;
int flips = MAX_FLIPS;
const int id = 0;
bit_t currBit;
</declaration>
		<location id="id48" x="-161" y="0">
			<name x="-204" y="-25">Done</name>
		</location>
		<location id="id49" x="399" y="-136">
			<name x="407" y="-170">Flipping</name>
			<committed/>
		</location>
		<location id="id50" x="0" y="0">
			<name x="-42" y="-25">Idle</name>
			<label kind="invariant" x="-59" y="8">x &lt;= 1</label>
		</location>
		<init ref="id50"/>
		<transition id="id51">
			<source ref="id49"/>
			<target ref="id50"/>
			<label kind="assignment" x="17" y="-255">a5 = a5 ^ pwr(2, currBit),log_flip (Location,5)</label>
			<nail x="399" y="-238"/>
			<nail x="0" y="-238"/>
		</transition>
		<transition id="id52">
			<source ref="id49"/>
			<target ref="id50"/>
			<label kind="assignment" x="17" y="-221">a4 = a4 ^ pwr(2, currBit),log_flip(Location,4)</label>
			<nail x="399" y="-204"/>
			<nail x="0" y="-204"/>
		</transition>
		<transition id="id53">
			<source ref="id49"/>
			<target ref="id50"/>
			<label kind="assignment" x="17" y="-187">a3 = a3 ^ pwr(2, currBit),log_flip(Location,3)</label>
			<nail x="374" y="-144"/>
			<nail x="374" y="-170"/>
			<nail x="0" y="-170"/>
		</transition>
		<transition id="id54">
			<source ref="id49"/>
			<target ref="id50"/>
			<label kind="assignment" x="17" y="-153">a0 = a0 ^ pwr(2, currBit),log_flip(Location,0)</label>
			<nail x="0" y="-136"/>
		</transition>
		<transition id="id55">
			<source ref="id50"/>
			<target ref="id48"/>
			<label kind="guard" x="-136" y="-25">flips == 0</label>
		</transition>
		<transition id="id56">
			<source ref="id50"/>
			<target ref="id50"/>
			<label kind="guard" x="8" y="42">x &gt;= 1</label>
			<label kind="assignment" x="8" y="59">x = 0</label>
			<nail x="0" y="85"/>
			<nail x="85" y="85"/>
			<nail x="85" y="34"/>
			<nail x="25" y="34"/>
		</transition>
		<transition id="id57">
			<source ref="id50"/>
			<target ref="id49"/>
			<label kind="select" x="8" y="-59">bit : bit_t</label>
			<label kind="guard" x="8" y="-25">(flips &gt; 0) &amp;&amp; (x &gt;= 1)</label>
			<label kind="assignment" x="8" y="-68">x = 0, currBit = bit, flips = flips - 1</label>
			<nail x="399" y="0"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system SUDO, Attacker;
</system>
	<queries>
		<option key="--diagnostic" value="0"/>
		<query>
			<formula>A&lt;&gt; (SUDO.Auth_Fail || SUDO.MemSegFault || SUDO.Undefined)</formula>
			<comment/>
		</query>
		<query>
			<formula>E&lt;&gt; SUDO.Auth_Succ</formula>
			<comment/>
		</query>
		<query>
			<formula/>
			<comment/>
		</query>
		<query>
			<formula>E&lt;&gt; SUDO.Auth_Succ &amp;&amp; new_ver == 1</formula>
			<comment/>
		</query>
		<query>
			<formula>E&lt;&gt; SUDO.Auth_Succ &amp;&amp; new_ver == 0 &amp;&amp; Attacker.flips == 0</formula>
			<comment/>
		</query>
		<query>
			<formula/>
			<comment/>
		</query>
		<query>
			<formula>Pr[&lt;=500; 1000000](&lt;&gt; SUDO.Auth_Succ)</formula>
			<comment/>
		</query>
	</queries>
</nta>
